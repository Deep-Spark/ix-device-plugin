// WARNING: This file has automatically been generated on Tue, 26 Nov 2024 13:56:40 CST.
// Code generated by https://git.io/c-for-go. DO NOT EDIT.

package ixml

/*
#cgo LDFLAGS: -Wl,--export-dynamic -Wl,--unresolved-symbols=ignore-in-object-files
#cgo CFLAGS: -DNVML_NO_UNVERSIONED_FUNC_DEFS=1
#include "api.h"
#include <stdlib.h>
#include "cgo_helpers.h"
*/
import "C"

const (
	// GPM_METRICS_GET_VERSION as defined in ixml/api.h:375
	GPM_METRICS_GET_VERSION = 1
	// GPM_SUPPORT_VERSION as defined in ixml/api.h:386
	GPM_SUPPORT_VERSION = 1
	// DEVICE_UUID_BUFFER_SIZE as defined in ixml/api.h:390
	DEVICE_UUID_BUFFER_SIZE = 80
	// SYSTEM_DRIVER_VERSION_BUFFER_SIZE as defined in ixml/api.h:395
	SYSTEM_DRIVER_VERSION_BUFFER_SIZE = 80
	// DEVICE_NAME_BUFFER_SIZE as defined in ixml/api.h:400
	DEVICE_NAME_BUFFER_SIZE = 64
	// DEVICE_NAME_V2_BUFFER_SIZE as defined in ixml/api.h:405
	DEVICE_NAME_V2_BUFFER_SIZE = 96
	// DEVICE_PCI_BUS_ID_BUFFER_SIZE as defined in ixml/api.h:410
	DEVICE_PCI_BUS_ID_BUFFER_SIZE = 32
	// DEVICE_PCI_BUS_ID_BUFFER_V2_SIZE as defined in ixml/api.h:415
	DEVICE_PCI_BUS_ID_BUFFER_V2_SIZE = 16
	// HealthSYSHUBError as defined in ixml/api.h:417
	HealthSYSHUBError = int64(0x0000000000000001)
	// HealthMCError as defined in ixml/api.h:418
	HealthMCError = int64(0x0000000000000002)
	// HealthOverTempError as defined in ixml/api.h:419
	HealthOverTempError = int64(0x0000000000000004)
	// HealthOverVoltageError as defined in ixml/api.h:420
	HealthOverVoltageError = int64(0x0000000000000008)
	// HealthECCError as defined in ixml/api.h:421
	HealthECCError = int64(0x0000000000000010)
	// HealthMemoryError as defined in ixml/api.h:422
	HealthMemoryError = int64(0x0000000000000020)
	// HealthPCIEError as defined in ixml/api.h:423
	HealthPCIEError = int64(0x0000000000000040)
	// HealthOK as defined in ixml/api.h:424
	HealthOK = int64(0x0000000000000000)
	// NO_UNVERSIONED_FUNC_DEFS as defined in go-ixml/<predefined>:349
	NO_UNVERSIONED_FUNC_DEFS = 1
)

// Return as declared in ixml/api.h:128
type Return int32

// Return enumeration from ixml/api.h:128
const (
	SUCCESS                         Return = iota
	ERROR_UNINITIALIZED             Return = 1
	ERROR_INVALID_ARGUMENT          Return = 2
	ERROR_NOT_SUPPORTED             Return = 3
	ERROR_NO_PERMISSION             Return = 4
	ERROR_ALREADY_INITIALIZED       Return = 5
	ERROR_NOT_FOUND                 Return = 6
	ERROR_INSUFFICIENT_SIZE         Return = 7
	ERROR_INSUFFICIENT_POWER        Return = 8
	ERROR_DRIVER_NOT_LOADED         Return = 9
	ERROR_TIMEOUT                   Return = 10
	ERROR_IRQ_ISSUE                 Return = 11
	ERROR_LIBRARY_NOT_FOUND         Return = 12
	ERROR_FUNCTION_NOT_FOUND        Return = 13
	ERROR_CORRUPTED_INFOROM         Return = 14
	ERROR_GPU_IS_LOST               Return = 15
	ERROR_RESET_REQUIRED            Return = 16
	ERROR_OPERATING_SYSTEM          Return = 17
	ERROR_LIB_RM_VERSION_MISMATCH   Return = 18
	ERROR_IN_USE                    Return = 19
	ERROR_MEMORY                    Return = 20
	ERROR_NO_DATA                   Return = 21
	ERROR_VGPU_ECC_NOT_SUPPORTED    Return = 22
	ERROR_INSUFFICIENT_RESOURCES    Return = 23
	ERROR_FREQ_NOT_SUPPORTED        Return = 24
	ERROR_ARGUMENT_VERSION_MISMATCH Return = 25
	ERROR_UNKNOWN                   Return = 999
)

// TemperatureSensors as declared in ixml/api.h:175
type TemperatureSensors int32

// TemperatureSensors enumeration from ixml/api.h:175
const (
	TEMPERATURE_GPU   TemperatureSensors = iota
	TEMPERATURE_COUNT TemperatureSensors = 1
)

// ClockType as declared in ixml/api.h:191
type ClockType int32

// ClockType enumeration from ixml/api.h:191
const (
	CLOCK_GRAPHICS ClockType = iota
	CLOCK_SM       ClockType = 1
	CLOCK_MEM      ClockType = 2
	CLOCK_VIDEO    ClockType = 3
	CLOCK_COUNT    ClockType = 4
)

// GpuTopologyLevel as declared in ixml/api.h:230
type GpuTopologyLevel int32

// GpuTopologyLevel enumeration from ixml/api.h:230
const (
	TOPOLOGY_INTERNAL   GpuTopologyLevel = iota
	TOPOLOGY_SINGLE     GpuTopologyLevel = 10
	TOPOLOGY_MULTIPLE   GpuTopologyLevel = 20
	TOPOLOGY_HOSTBRIDGE GpuTopologyLevel = 30
	TOPOLOGY_NODE       GpuTopologyLevel = 40
	TOPOLOGY_SYSTEM     GpuTopologyLevel = 50
)

// GpmMetricId as declared in ixml/api.h:320
type GpmMetricId int32

// GpmMetricId enumeration from ixml/api.h:320
const (
	GPM_METRIC_GRAPHICS_UTIL           GpmMetricId = 1
	GPM_METRIC_SM_UTIL                 GpmMetricId = 2
	GPM_METRIC_SM_OCCUPANCY            GpmMetricId = 3
	GPM_METRIC_INTEGER_UTIL            GpmMetricId = 4
	GPM_METRIC_ANY_TENSOR_UTIL         GpmMetricId = 5
	GPM_METRIC_DFMA_TENSOR_UTIL        GpmMetricId = 6
	GPM_METRIC_HMMA_TENSOR_UTIL        GpmMetricId = 7
	GPM_METRIC_IMMA_TENSOR_UTIL        GpmMetricId = 9
	GPM_METRIC_DRAM_BW_UTIL            GpmMetricId = 10
	GPM_METRIC_FP64_UTIL               GpmMetricId = 11
	GPM_METRIC_FP32_UTIL               GpmMetricId = 12
	GPM_METRIC_FP16_UTIL               GpmMetricId = 13
	GPM_METRIC_PCIE_TX_PER_SEC         GpmMetricId = 20
	GPM_METRIC_PCIE_RX_PER_SEC         GpmMetricId = 21
	GPM_METRIC_NVDEC_0_UTIL            GpmMetricId = 30
	GPM_METRIC_NVDEC_1_UTIL            GpmMetricId = 31
	GPM_METRIC_NVDEC_2_UTIL            GpmMetricId = 32
	GPM_METRIC_NVDEC_3_UTIL            GpmMetricId = 33
	GPM_METRIC_NVDEC_4_UTIL            GpmMetricId = 34
	GPM_METRIC_NVDEC_5_UTIL            GpmMetricId = 35
	GPM_METRIC_NVDEC_6_UTIL            GpmMetricId = 36
	GPM_METRIC_NVDEC_7_UTIL            GpmMetricId = 37
	GPM_METRIC_NVJPG_0_UTIL            GpmMetricId = 40
	GPM_METRIC_NVJPG_1_UTIL            GpmMetricId = 41
	GPM_METRIC_NVJPG_2_UTIL            GpmMetricId = 42
	GPM_METRIC_NVJPG_3_UTIL            GpmMetricId = 43
	GPM_METRIC_NVJPG_4_UTIL            GpmMetricId = 44
	GPM_METRIC_NVJPG_5_UTIL            GpmMetricId = 45
	GPM_METRIC_NVJPG_6_UTIL            GpmMetricId = 46
	GPM_METRIC_NVJPG_7_UTIL            GpmMetricId = 47
	GPM_METRIC_NVOFA_0_UTIL            GpmMetricId = 50
	GPM_METRIC_NVLINK_TOTAL_RX_PER_SEC GpmMetricId = 60
	GPM_METRIC_NVLINK_TOTAL_TX_PER_SEC GpmMetricId = 61
	GPM_METRIC_NVLINK_L0_RX_PER_SEC    GpmMetricId = 62
	GPM_METRIC_NVLINK_L0_TX_PER_SEC    GpmMetricId = 63
	GPM_METRIC_NVLINK_L1_RX_PER_SEC    GpmMetricId = 64
	GPM_METRIC_NVLINK_L1_TX_PER_SEC    GpmMetricId = 65
	GPM_METRIC_NVLINK_L2_RX_PER_SEC    GpmMetricId = 66
	GPM_METRIC_NVLINK_L2_TX_PER_SEC    GpmMetricId = 67
	GPM_METRIC_NVLINK_L3_RX_PER_SEC    GpmMetricId = 68
	GPM_METRIC_NVLINK_L3_TX_PER_SEC    GpmMetricId = 69
	GPM_METRIC_NVLINK_L4_RX_PER_SEC    GpmMetricId = 70
	GPM_METRIC_NVLINK_L4_TX_PER_SEC    GpmMetricId = 71
	GPM_METRIC_NVLINK_L5_RX_PER_SEC    GpmMetricId = 72
	GPM_METRIC_NVLINK_L5_TX_PER_SEC    GpmMetricId = 73
	GPM_METRIC_NVLINK_L6_RX_PER_SEC    GpmMetricId = 74
	GPM_METRIC_NVLINK_L6_TX_PER_SEC    GpmMetricId = 75
	GPM_METRIC_NVLINK_L7_RX_PER_SEC    GpmMetricId = 76
	GPM_METRIC_NVLINK_L7_TX_PER_SEC    GpmMetricId = 77
	GPM_METRIC_NVLINK_L8_RX_PER_SEC    GpmMetricId = 78
	GPM_METRIC_NVLINK_L8_TX_PER_SEC    GpmMetricId = 79
	GPM_METRIC_NVLINK_L9_RX_PER_SEC    GpmMetricId = 80
	GPM_METRIC_NVLINK_L9_TX_PER_SEC    GpmMetricId = 81
	GPM_METRIC_NVLINK_L10_RX_PER_SEC   GpmMetricId = 82
	GPM_METRIC_NVLINK_L10_TX_PER_SEC   GpmMetricId = 83
	GPM_METRIC_NVLINK_L11_RX_PER_SEC   GpmMetricId = 84
	GPM_METRIC_NVLINK_L11_TX_PER_SEC   GpmMetricId = 85
	GPM_METRIC_NVLINK_L12_RX_PER_SEC   GpmMetricId = 86
	GPM_METRIC_NVLINK_L12_TX_PER_SEC   GpmMetricId = 87
	GPM_METRIC_NVLINK_L13_RX_PER_SEC   GpmMetricId = 88
	GPM_METRIC_NVLINK_L13_TX_PER_SEC   GpmMetricId = 89
	GPM_METRIC_NVLINK_L14_RX_PER_SEC   GpmMetricId = 90
	GPM_METRIC_NVLINK_L14_TX_PER_SEC   GpmMetricId = 91
	GPM_METRIC_NVLINK_L15_RX_PER_SEC   GpmMetricId = 92
	GPM_METRIC_NVLINK_L15_TX_PER_SEC   GpmMetricId = 93
	GPM_METRIC_NVLINK_L16_RX_PER_SEC   GpmMetricId = 94
	GPM_METRIC_NVLINK_L16_TX_PER_SEC   GpmMetricId = 95
	GPM_METRIC_NVLINK_L17_RX_PER_SEC   GpmMetricId = 96
	GPM_METRIC_NVLINK_L17_TX_PER_SEC   GpmMetricId = 97
	GPM_METRIC_MAX                     GpmMetricId = 98
)
